# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui_format.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtChart import QChartView
from PyQt5.QtCore import QDateTime

class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1500, 940)
        self.tabWidget = QtWidgets.QTabWidget(Form)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 1500, 940))
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setIconSize(QtCore.QSize(16, 16))
        self.tabWidget.setObjectName("tabWidget")
        
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.setup_recognition_tab()
        self.tabWidget.addTab(self.tab, "")
        
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.setup_data_tab()
        self.tabWidget.addTab(self.tab_2, "")

        self.retranslateUi(Form)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def setup_recognition_tab(self):
        self.tableWidget = QtWidgets.QTableWidget(self.tab)
        self.tableWidget.setGeometry(QtCore.QRect(1210, 700, 280, 200))
        self.tableWidget.setStyleSheet("/* 主表格样式 */\n"
"QTableWidget {\n"
"    background-color: #f5f5f5;       /* 浅灰色背景 */\n"
"    border: 2px solid #d0d0d0;      /* 中灰色边框 */\n"
"    border-radius: 6px;\n"
"    gridline-color: #e0e0e0;        /* 浅灰色网格线 */\n"
"    font-family: \"Segoe UI\", \"Microsoft YaHei\";\n"
"    font-size: 14px;                /* 增大基础字体大小 */\n"
"    selection-background-color: #a0a0a0;  /* 中灰色选中背景 */\n"
"    selection-color: #ffffff;\n"
"    outline: none;\n"
"}\n"
"\n"
"/* 表头样式 */\n"
"QHeaderView::section {\n"
"    background-color: #e0e0e0;      /* 浅灰色表头 */\n"
"    color: #333333;                 /* 深灰色文字 */\n"
"    padding: 6px 8px;               /* 减少垂直padding降低行高 */\n"
"    border: none;\n"
"    font-weight: bold;\n"
"    font-size: 14px;                /* 表头字体与内容一致 */\n"
"    border-radius: 4px 4px 0 0;\n"
"    margin: 0;\n"
"    border-bottom: 2px solid #c0c0c0; /* 中灰色底部边框 */\n"
"}\n"
"\n"
"/* 单元格基础样式 */\n"
"QTableWidget::item {\n"
"    background-color: #ffffff;      /* 白色单元格 */\n"
"    color: #333333;                /* 深灰色文字 */\n"
"    border-bottom: 1px solid #e8e8e8; /* 浅灰色下边框 */\n"
"    padding: 2px 8px;              /* 减少垂直padding降低行高 */\n"
"    font-size: 14px;               /* 增大单元格字体 */\n"
"}\n"
"\n"
"/* 交替行颜色 */\n"
"QTableWidget::item:alternate {\n"
"    background-color: #f0f0f0;      /* 极浅灰色交替行 */\n"
"}\n"
"\n"
"/* 悬停效果 */\n"
"QTableWidget::item:hover {\n"
"    background-color: #e8e8e8;      /* 浅灰色悬停 */\n"
"    color: #222222;\n"
"}\n"
"\n"
"/* 选中状态 */\n"
"QTableWidget::item:selected {\n"
"    background-color: #a0a0a0;      /* 中灰色选中 */\n"
"    color: white;\n"
"}\n"
"\n"
"/* 角落按钮 */\n"
"QTableWidget QTableCornerButton::section {\n"
"    background-color: #e0e0e0;      /* 与表头一致 */\n"
"    border-radius: 4px 0 0 0;\n"
"    border-bottom: 2px solid #c0c0c0;\n"
"}\n"
"\n"
"/* 设置行高 */\n"
"QTableView::item {\n"
"    height: 24px;                  /* 固定行高 */\n"
"}\n"
"\n"
"/* 设置行高的另一种方式 */\n"
"QTableView {\n"
"    qproperty-showGrid: false;\n"
"    alternate-background-color: #f0f0f0;\n"
"    gridline-color: #e0e0e0;\n"
"}\n"
"\n"
"/* 滚动条优化样式 */\n"
"QScrollBar:vertical {\n"
"    border: none;\n"
"    background-color: #f5f5f5;      /* 与表格背景一致 */\n"
"    width: 12px;\n"
"    margin: 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #c0c0c0;      /* 中灰色滑块 */\n"
"    min-height: 30px;\n"
"    border-radius: 6px;\n"
"    margin: 2px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #a8a8a8;      /* 悬停加深 */\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical,\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 0;\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:vertical,\n"
"QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}\n"
"\n"
"/* 禁用状态样式 */\n"
"QTableWidget::item:disabled {\n"
"    color: #999999;\n"
"    background-color: #f0f0f0;\n"
"}")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(1)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        
        self.frame_2 = QtWidgets.QFrame(self.tab)
        self.frame_2.setGeometry(QtCore.QRect(1210, 490, 280, 191))
        self.frame_2.setStyleSheet("background-color: #eeeeee;   /* 背景色 */\n"
"    border: 2px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        
        self.btn_start = QtWidgets.QPushButton(self.frame_2)
        self.btn_start.setGeometry(QtCore.QRect(10, 20, 260, 70))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btn_start.setFont(font)
        self.btn_start.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btn_start.setObjectName("btn_start")
        
        self.btn_end = QtWidgets.QPushButton(self.frame_2)
        self.btn_end.setGeometry(QtCore.QRect(10, 100, 260, 70))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btn_end.setFont(font)
        self.btn_end.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btn_end.setObjectName("btn_end")
        
        self.label_video = QtWidgets.QLabel(self.tab)
        self.label_video.setGeometry(QtCore.QRect(0, 0, 1200, 900))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_video.setFont(font)
        self.label_video.setStyleSheet("background-color: #eeeeee;   /* 背景色 */\n"
"    border: 1px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */")
        self.label_video.setAlignment(QtCore.Qt.AlignCenter)
        self.label_video.setObjectName("label_video")
        
        self.frame = QtWidgets.QFrame(self.tab)
        self.frame.setGeometry(QtCore.QRect(1210, 0, 280, 481))
        self.frame.setStyleSheet("background-color: #eeeeee;   /* 背景色 */\n"
"    border: 2px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        
        self.btn_add = QtWidgets.QPushButton(self.frame)
        self.btn_add.setGeometry(QtCore.QRect(10, 20, 260, 70))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btn_add.setFont(font)
        self.btn_add.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btn_add.setObjectName("btn_add")
        
        self.btn_save = QtWidgets.QPushButton(self.frame)
        self.btn_save.setGeometry(QtCore.QRect(10, 230, 260, 70))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btn_save.setFont(font)
        self.btn_save.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btn_save.setObjectName("btn_save")
        
        self.btn_capture = QtWidgets.QPushButton(self.frame)
        self.btn_capture.setGeometry(QtCore.QRect(10, 150, 260, 70))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btn_capture.setFont(font)
        self.btn_capture.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btn_capture.setObjectName("btn_capture")
        
        self.label_name = QtWidgets.QLabel(self.frame)
        self.label_name.setGeometry(QtCore.QRect(20, 100, 91, 40))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_name.setFont(font)
        self.label_name.setStyleSheet("    background-color: #ffffff;\n"
"    border:0px solid #cccccc;\n"
"    border-radius: 0px;\n"
"background-color: #eeeeee;   /* 背景色 */")
        self.label_name.setAlignment(QtCore.Qt.AlignCenter)
        self.label_name.setObjectName("label_name")
        
        self.lineEdit_name = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_name.setGeometry(QtCore.QRect(100, 100, 151, 40))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.lineEdit_name.setFont(font)
        self.lineEdit_name.setStyleSheet("\n"
"    border: 1px solid black; /* 设置对话框的边框颜色 */\n"
"    border-radius: 5px; /* 设置对话框的圆角 */\n"
"background-color: white;\n"
"")
        self.lineEdit_name.setText("")
        self.lineEdit_name.setObjectName("lineEdit_name")
        
        self.btn_train = QtWidgets.QPushButton(self.frame)
        self.btn_train.setGeometry(QtCore.QRect(10, 310, 260, 70))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btn_train.setFont(font)
        self.btn_train.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btn_train.setObjectName("btn_train")
        
        self.btn_delete = QtWidgets.QPushButton(self.frame)
        self.btn_delete.setGeometry(QtCore.QRect(10, 390, 260, 70))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btn_delete.setFont(font)
        self.btn_delete.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btn_delete.setObjectName("btn_delete")

    # 在 setup_data_tab 方法中替换时间控件部分
    def setup_data_tab(self):
        self.time_frame = QtWidgets.QFrame(self.tab_2)
        self.time_frame.setGeometry(QtCore.QRect(20, 20, 1460, 60))
        self.time_frame.setStyleSheet("background-color: #eeeeee; border: 1px solid #cccccc;")
        self.time_frame.setObjectName("time_frame")
        
        # 时间段选择按钮组
        self.time_range_group = QtWidgets.QButtonGroup(self.time_frame)
        
        # 创建5个时间段选择按钮
        self.btn_hour = QtWidgets.QRadioButton("过去一小时", self.time_frame)
        self.btn_day = QtWidgets.QRadioButton("过去一天", self.time_frame)
        self.btn_week = QtWidgets.QRadioButton("过去一周", self.time_frame)
        self.btn_month = QtWidgets.QRadioButton("过去一月", self.time_frame)
        self.btn_year = QtWidgets.QRadioButton("过去一年", self.time_frame)
        
        # 设置按钮位置和样式
        buttons = [self.btn_hour, self.btn_day, self.btn_week, self.btn_month, self.btn_year]
        for i, btn in enumerate(buttons):
                btn.setGeometry(QtCore.QRect(20 + i*150, 15, 140, 30))
                btn.setStyleSheet("""
                QRadioButton {
                        font-size: 14px;
                        padding: 5px;
                }
                QRadioButton::indicator {
                        width: 16px;
                        height: 16px;
                }
                """)
                self.time_range_group.addButton(btn)
        
        # 默认选中"过去24小时"
        self.btn_day.setChecked(True)
        
        self.refresh_btn = QtWidgets.QPushButton(self.time_frame)
        self.refresh_btn.setGeometry(QtCore.QRect(800, 15, 120, 30))
        self.refresh_btn.setStyleSheet("""
                QPushButton {
                border: 1px solid black;
                border-radius: 5px;
                background-color: #ffffff;
                font-size: 14px;
                }
                QPushButton:hover {
                background-color: #eeeeee;
                }
                QPushButton:pressed {
                background-color: #dddddd;
                }
        """)
        self.refresh_btn.setObjectName("refresh_btn")
        
        self.chart_view = QChartView(self.tab_2)
        self.chart_view.setGeometry(QtCore.QRect(20, 100, 1460, 800))
        self.chart_view.setRenderHint(QtGui.QPainter.Antialiasing)
        self.chart_view.setStyleSheet("background-color: white; border: 1px solid #cccccc;")

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Form", "已添加的人脸模板"))
        self.btn_start.setText(_translate("Form", "开始识别"))
        self.btn_end.setText(_translate("Form", "结束识别"))
        self.label_video.setText(_translate("Form", "Video"))
        self.btn_add.setText(_translate("Form", "添加人脸模板"))
        self.btn_save.setText(_translate("Form", "保存人脸模板"))
        self.btn_capture.setText(_translate("Form", "拍摄人脸模板"))
        self.label_name.setText(_translate("Form", "名称："))
        self.btn_train.setText(_translate("Form", "训练模型"))
        self.btn_delete.setText(_translate("Form", "删除人脸模板"))
        self.refresh_btn.setText(_translate("Form", "刷新图表"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("Form", "人脸识别"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("Form", "数据统计"))